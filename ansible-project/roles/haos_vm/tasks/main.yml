---
# Pre-flight checks
- name: Verify system requirements
  block:
    - name: Check system architecture
      ansible.builtin.command: dpkg --print-architecture
      register: arch_check
      failed_when: arch_check.stdout != "amd64"
      changed_when: false

    - name: Verify Proxmox VE version
      ansible.builtin.shell: pveversion
      register: pve_version
      failed_when: not pve_version.stdout is regex("pve-manager/[7-8]\\.[0-9]+")
      changed_when: false

# Download and prepare HAOS image
- name: Download and prepare HAOS image
  block:
    - name: Download HAOS image
      ansible.builtin.get_url:
        url: "{{ haos_url }}"
        dest: "/tmp/{{ dest_image }}.xz"
        mode: "0644"

    - name: Extract HAOS image
      ansible.builtin.command:
        cmd: "unxz /tmp/{{ dest_image }}.xz"
        creates: "/tmp/{{ dest_image }}"

    - name: Move HAOS image to template storage
      ansible.builtin.copy:
        src: "/tmp/{{ dest_image }}"
        dest: "/var/lib/vz/template/iso/{{ dest_image }}"
        remote_src: true
        mode: "0644"

# Create VM using proxmox role
- name: Set VM creation parameters
  ansible.builtin.set_fact:
    vm_params:
      name: "{{ haos_vm_name }}"
      id: "{{ haos_vm_id | default(lookup('pipe','pvesh get /cluster/nextid') | trim) }}"
      memory: "{{ haos_vm_memory }}"
      cores: "{{ haos_vm_cores }}"
      disk_size: "{{ haos_vm_disk_size }}"
      template: "/var/lib/vz/template/iso/{{ dest_image }}"
      network: "{{ haos_vm_network }}"
      boot: "order=scsi0"
      ostype: "l26"
      features:
        machine: "q35"
        bios: "ovmf"
      description: |
        Home Assistant OS VM
        Version: {{ haos_version }}
        Created: {{ ansible_date_time.iso8601 }}

# Configure VM-specific settings
- name: Configure HAOS-specific settings
  block:
    - name: Configure EFI disk
      ansible.builtin.command:
        cmd: >
          qm set {{ vm_params.id }}
          -efidisk0 {{ proxmox_vm_defaults.storage }}:{{ vm_params.id }}/vm-{{ vm_params.id }}-disk-0,efitype=4m
      when: vm_params.id is defined

    - name: Configure serial port
      ansible.builtin.command:
        cmd: >
          qm set {{ vm_params.id }}
          -serial0 socket
      when: vm_params.id is defined

    - name: Configure USB passthrough
      ansible.builtin.command:
        cmd: >
          qm set {{ vm_params.id }}
          -usb0 host={{ item }}
      loop: "{{ haos_usb_devices }}"
      when: 
        - vm_params.id is defined
        - haos_usb_devices | length > 0

    - name: Configure Z-Wave device
      ansible.builtin.command:
        cmd: >
          qm set {{ vm_params.id }}
          -usb1 host=0658:0200
      when: 
        - vm_params.id is defined
        - haos_enable_zwave | bool

    - name: Configure Zigbee device
      ansible.builtin.command:
        cmd: >
          qm set {{ vm_params.id }}
          -usb2 host=0451:16a8
      when:
        - vm_params.id is defined
        - haos_enable_zigbee | bool

# Start VM if requested
- name: Start Home Assistant OS VM
  ansible.builtin.command:
    cmd: "qm start {{ vm_params.id }}"
  when:
    - vm_params.id is defined
    - start_vm | default(true) | bool
  register: start_result
  changed_when: start_result.rc == 0
  failed_when: start_result.rc != 0 and "already running" not in start_result.stderr

- name: Display completion message
  ansible.builtin.debug:
    msg: |
      Home Assistant OS VM has been created successfully
      VMID: {{ vm_params.id }}
      Name: {{ vm_params.name }}
      Memory: {{ vm_params.memory }}MB
      Cores: {{ vm_params.cores }}
      Version: {{ haos_version }}
