---
# Configure power management settings for Proxmox VE
- name: Create power management configuration directory
  ansible.builtin.file:
    path: /etc/default/power-management
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: Generate power management configuration
  ansible.builtin.template:
    src: power-management.conf.j2
    dest: /etc/default/power-management/power.conf
    mode: "0644"
    owner: root
    group: root
  notify: reload power management

# CPU Governor Configuration
- name: Set CPU governor
  ansible.builtin.command: "cpupower frequency-set -g {{ proxmox_power.cpu_governor }}"
  changed_when: true
  when: proxmox_power.cpu_governor is defined

# PCIE ASPM Configuration
- name: Configure PCIE ASPM policy
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: "^GRUB_CMDLINE_LINUX_DEFAULT=.*pcie_aspm=.*"
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet pcie_aspm={{ proxmox_power.pcie_aspm_policy }}"'
  notify: update grub
  when: proxmox_power.pcie_aspm_policy is defined

# Disk Power Management
- name: Configure disk power management
  ansible.builtin.command: "hdparm -B {{ '255' if item.power_control == 'on' else '128' }} /dev/{{ item.name }}"
  with_items: "{{ proxmox_power.disks }}"
  changed_when: true
  when: proxmox_power.disks is defined

- name: Set disk schedulers
  ansible.builtin.command: "echo {{ item.scheduler }} > /sys/block/{{ item.name }}/queue/scheduler"
  with_items: "{{ proxmox_power.disks }}"
  changed_when: true
  when: proxmox_power.disks is defined

# USB Autosuspend
- name: Configure USB autosuspend
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: "^GRUB_CMDLINE_LINUX_DEFAULT=.*usbcore.autosuspend=.*"
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet usbcore.autosuspend={{ "-1" if not proxmox_power.usb_autosuspend else "2" }}"'
  notify: update grub
  when: proxmox_power.usb_autosuspend is defined

# Network Interface Power Management
- name: Configure network interface power management
  ansible.builtin.command: "ethtool -s {{ item.name }} wol {{ 'g' if item.power_control == 'on' else 'd' }}"
  with_items: "{{ proxmox_power.network_interfaces }}"
  changed_when: true
  when: proxmox_power.network_interfaces is defined

# Thermal Management
- name: Configure thermal management
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/modules.conf
    line: "acpi_thermal_rel"
    state: "{{ 'present' if proxmox_power.thermal_mode == 'enabled' else 'absent' }}"
  notify: reload modules
  when: proxmox_power.thermal_mode is defined

# Fan Control
- name: Configure fan control mode
  ansible.builtin.command: "echo {{ proxmox_power.fan_mode }} > /sys/class/thermal/thermal_zone0/mode"
  changed_when: true
  when: proxmox_power.fan_mode is defined
