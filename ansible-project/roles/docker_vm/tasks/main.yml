---
# Create Docker VM using proxmox role's VM functionality
- name: Set VM creation parameters
  ansible.builtin.set_fact:
    vm_params:
      name: "{{ docker_vm_name }}"
      id: "{{ docker_vm_id }}"
      memory: "{{ docker_vm_memory }}"
      cores: "{{ docker_vm_cores }}"
      disk_size: "{{ docker_vm_disk_size }}"
      template: "{{ docker_vm_template }}"
      network: "{{ docker_vm_network }}"

# Docker Installation and Configuration
- name: Install Docker
  block:
    - name: Download Docker installation script
      ansible.builtin.get_url:
        url: "{{ docker_get_script_url }}"
        dest: "/tmp/get-docker.sh"
        mode: "0755"

    - name: Execute Docker installation script
      ansible.builtin.command:
        cmd: "sh /tmp/get-docker.sh"
      register: docker_install
      changed_when: docker_install.rc == 0
      notify: restart docker

    - name: Create Docker configuration directory
      ansible.builtin.file:
        path: "/etc/docker"
        state: directory
        mode: "0755"

    - name: Configure Docker daemon
      ansible.builtin.copy:
        content: "{{ docker_daemon_config }}"
        dest: "/etc/docker/daemon.json"
        mode: "0644"
      notify: restart docker

    - name: Install Docker Compose
      ansible.builtin.get_url:
        url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64"
        dest: "/usr/local/bin/docker-compose"
        mode: "0755"

    - name: Add users to Docker group
      ansible.builtin.user:
        name: "{{ item }}"
        groups: docker
        append: true
      loop: "{{ docker_users }}"
      notify: restart docker

  when: vm_params is defined
  tags: ['docker', 'install']

# Use handlers from proxmox role
handlers:
  - name: restart docker
    ansible.builtin.systemd:
      name: docker
      state: restarted
      enabled: true

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install prerequisites
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present

- name: Deploy Portainer container if enabled
  when: install_portainer
  community.docker.docker_container:
    name: portainer
    image: "{{ portainer_image }}"
    state: started
    restart_policy: always
    published_ports: "{{ portainer_ports }}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

- name: Clean up Docker install script
  file:
    path: /tmp/get-docker.sh
    state: absent
...
