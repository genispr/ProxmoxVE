---
# This playbook configures settings for the deployed media apps.
- name: Configure Prowlarr settings
  ansible.builtin.debug:
    msg: "Configuring Prowlarr settings..."

- name: "Configure Sonarr"
  template:
    src: "templates/sonarr_config.j2"
    dest: "/etc/sonarr/config.conf"
  when: sonarr_enabled | default(false)

- name: "Configure Radarr"
  template:
    src: "templates/radarr_config.j2"
    dest: "/etc/radarr/config.conf"
  when: radarr_enabled | default(false)

- name: "Configure Lidarr"
  template:
    src: "templates/lidarr_config.j2"
    dest: "/etc/lidarr/config.conf"
  when: lidarr_enabled | default(false)

- name: "Configure Bazarr"
  template:
    src: "templates/bazarr_config.j2"
    dest: "/etc/bazarr/config.conf"
  when: bazarr_enabled

- name: "Configure Readarr"
  template:
    src: "templates/readarr_config.j2"
    dest: "/etc/readarr/config.conf"
  when: readarr_enabled

- name: "Configure Recyclarr"
  template:
    src: "templates/recyclarr_config.j2"
    dest: "/etc/recyclarr/config.conf"
  when: recyclarr_enabled

- name: Locate QBittorrent LXC file
  ansible.builtin.find:
    paths: "/etc/arr_apps"
    patterns: "qbitorrent*lxc"
    file_type: file
  register: qbitorrent_files

- name: "Configure QBittorrent for ARR apps"
  template:
    src: "templates/qbitorrent_config.j2"
    dest: "{{ qbitorrent_files.files[0].path if qbitorrent_files.matched > 0 else '/etc/arr_apps/qbitorrent.conf' }}"
