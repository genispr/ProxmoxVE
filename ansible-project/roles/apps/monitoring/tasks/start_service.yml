---
- name: Record start time
  set_fact:
    "{{ service_info.service }}_start_time": "{{ ansible_date_time.iso8601 }}"

- name: Verify dependencies are running
  community.docker.docker_container_info:
    name: "{{ item }}"
  register: dep_check
  failed_when: not dep_check.exists or dep_check.container.State.Status != 'running'
  loop: "{{ service_info.dependencies }}"

- name: Start service
  community.docker.docker_container:
    name: "{{ service_info.service }}"
    state: started

- name: Wait for service readiness
  wait_for:
    host: "{{ service_info.service }}"
    port: "{{ monitoring_ports[service_info.service] }}"
    timeout: "{{ monitoring_startup[service_info.service].timeout }}"
    delay: "{{ monitoring_startup[service_info.service].delay }}"

- name: Record service status
  set_fact:
    "{{ service_info.service }}_status": true
  when: not failed

- name: Calculate startup time
  set_fact:
    "{{ service_info.service }}_startup_time": "{{ (ansible_date_time.epoch | int) - (lookup('vars', service_info.service + '_start_time') | to_datetime('%Y-%m-%dT%H:%M:%S') | epoch) }}"
  when: not failed

- name: Update startup progress
  debug:
    msg: "Service {{ service_info.service }} startup completed"
