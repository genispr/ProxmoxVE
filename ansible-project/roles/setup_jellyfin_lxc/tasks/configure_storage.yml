---
# Install necessary clients for remote storage
- name: Install NFS client
  ansible.builtin.apt:
    name: nfs-common
    state: present
  when: jellyfin_remote_storage.enabled and jellyfin_remote_storage.type == "nfs"

- name: Install CIFS client
  ansible.builtin.apt:
    name: cifs-utils
    state: present
  when: jellyfin_remote_storage.enabled and jellyfin_remote_storage.type == "cifs"

# Create application-specific directories
- name: Create Jellyfin application directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ jellyfin_user }}"
    group: "{{ jellyfin_group }}"
    mode: "0755"
  loop:
    - "{{ jellyfin_config_dir }}"
    - "{{ jellyfin_data_dir }}"
    - "{{ jellyfin_log_dir }}"
    - "{{ jellyfin_cache_dir }}"
    - "{{ jellyfin_transcoding_path }}"

# Ensure Jellyfin user is part of the media group
- name: Add Jellyfin user to media group
  ansible.builtin.user:
    name: "{{ jellyfin_user }}"
    groups: "{{ jellyfin_group }}"
    append: true

# Mount remote storage if enabled
- name: Mount NFS share
  ansible.posix.mount:
    path: "{{ jellyfin_remote_storage.mount_point }}"
    src: "{{ jellyfin_remote_storage.server }}:{{ jellyfin_remote_storage.share_path }}"
    fstype: nfs
    opts: "{{ jellyfin_remote_storage.nfs_opts }}"
    state: mounted
  when: jellyfin_remote_storage.enabled and jellyfin_remote_storage.type == "nfs"

- name: Mount CIFS share
  ansible.posix.mount:
    path: "{{ jellyfin_remote_storage.mount_point }}"
    src: "//{{ jellyfin_remote_storage.server }}/{{ jellyfin_remote_storage.share_path }}"
    fstype: cifs
    opts: "username={{ jellyfin_remote_storage.cifs_username }},password={{ jellyfin_remote_storage.cifs_password }}{{ ',domain=' + jellyfin_remote_storage.cifs_domain if jellyfin_remote_storage.cifs_domain | default('') != '' else '' }}"
    state: mounted
  when: jellyfin_remote_storage.enabled and jellyfin_remote_storage.type == "cifs"
